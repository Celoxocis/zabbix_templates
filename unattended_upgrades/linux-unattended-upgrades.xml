<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>3.0</version>
    <date>2016-11-03T11:41:23Z</date>
    <groups>
        <group>
            <name>Templates</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Linux Unattended Upgrades</template>
            <name>Linux Unattended Upgrades</name>
            <description/>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications/>
            <items>
                <item>
                    <name>Kernel Build</name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>system.sw.os[&lt;info&gt;]</key>
                    <delay>30</delay>
                    <history>90</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>This Value will rturn the Linux OS String. From there, we write triggers to aler if build is less than:&#13;
&#13;
4.8.0-26.28 for Ubuntu 16.10&#13;
4.4.0-45.66 for Ubuntu 16.04 LTS&#13;
3.13.0-100.147 for Ubuntu 14.04 LTS&#13;
3.2.0-113.155 for Ubuntu 12.04 LTS&#13;
3.16.36-1+deb8u2 for Debian 8&#13;
3.2.82-1 for Debian 7&#13;
4.7.8-1 for Debian unstable</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Unattended Upgrades Kerenl Purge cron job</name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>vfs.file.contents[/var/spool/cron/crontabs/root,UTF8]</key>
                    <delay>30</delay>
                    <history>90</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>/var/spool/cron/crontabs/root must contain the cron job for alert to clear.</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Unattended Upgrades MOTD notifier</name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>vfs.file.exists[/etc/update-motd.d/90-updates-available]</key>
                    <delay>30</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>3</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>/etc/update-motd.d/90-updates-available needs to exist or update-notifier-common package is not installed so you don't get a MOTD notification as a fall back for unattended upgrades</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Aptitude Package</name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>vfs.file.exists[/usr/bin/aptitude]</key>
                    <delay>30</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>3</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>aptitude is needed by the purge-old-kernels.sh script</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Facter Package</name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>vfs.file.exists[/usr/bin/facter]</key>
                    <delay>30</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>3</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Checks if host needs a reboot presence of file confirms it does</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Unattended Upgrade Packages</name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>vfs.file.exists[/usr/bin/unattended-upgrade]</key>
                    <delay>30</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>3</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>If this binary does not exist then unattended-upgrades package is not installed</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Unattended Upgrades Clean old kernels</name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>vfs.file.exists[/usr/local/bin/purge-old-kernels.sh]</key>
                    <delay>30</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>3</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>/usr/local/bin/purge-old-kernels.sh needs to exist or update-notifier-common package is not installed so you don't get a MOTD notification as a fall back for unattended upgrades</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Reboot Required</name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>vfs.file.exists[/var/run/reboot-required]</key>
                    <delay>30</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>3</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Checks if host needs a reboot presence of file confirms it does</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>50unattendedupgrades</name>
                    <type>0</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>vfs.file.md5sum[/etc/apt/apt.conf.d/50unattended-upgrades]</key>
                    <delay>30</delay>
                    <history>90</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description>Checks MD5SUM of /etc/apt/apt.conf.d/50unattended-upgrades, so we can alert if it doesn't match what we want</description>
                    <inventory_link>0</inventory_link>
                    <applications/>
                    <valuemap/>
                    <logtimefmt/>
                </item>
            </items>
            <discovery_rules/>
            <macros/>
            <templates/>
            <screens/>
        </template>
    </templates>
    <triggers>
        <trigger>
            <expression>{Linux Unattended Upgrades:vfs.file.exists[/usr/bin/aptitude].last(0)}=0</expression>
            <name>Hey! {HOST.NAME} has no aptitude package installed</name>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>If /usr/bin/aptitude binary doesn't exist then package aptitude is not installed and therefore, alert us to this fact.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Linux Unattended Upgrades:vfs.file.exists[/usr/bin/facter].last(0)}=0</expression>
            <name>Hey! {HOST.NAME} has no facter package installed</name>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>If /usr/bin/facter binary doesn't exist then package facter is not installed and therefore, alert us to this fact.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Linux Unattended Upgrades:vfs.file.exists[/usr/local/bin/purge-old-kernels.sh].last(0)}=0</expression>
            <name>Hey! {HOST.NAME} has no purge-old-kernels.sh script installed</name>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>If /usr/local/bin/purge-old-kernels.sh file doesn't exist then package update-notifier-common is not installed and therefore, alert us to this fact.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Linux Unattended Upgrades:vfs.file.exists[/usr/bin/unattended-upgrade].last(0)}=0</expression>
            <name>Hey! {HOST.NAME} has no unattended-upgrades package installed</name>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>If /usr/bin/unattended-upgrade binary doesn't exist then package unattended-upgrades is not installed and therefore, alert us to this fact.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Linux Unattended Upgrades:vfs.file.exists[/etc/update-motd.d/90-updates-available].last(0)}=0</expression>
            <name>Hey! {HOST.NAME} has no update-notifier-common package installed</name>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>If /etc/update-motd.d/90-updates-available file doesn't exist then package update-notifier-common is not installed and therefore, alert us to this fact.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Linux Unattended Upgrades:vfs.file.md5sum[/etc/apt/apt.conf.d/50unattended-upgrades].str(f32cb7ae3c1b21d8f6dd91c583645af4)}=0 or {Linux Unattended Upgrades:vfs.file.md5sum[/etc/apt/apt.conf.d/50unattended-upgrades].str(3dfd6ce52830b90e95396f9b4c6e5b8c)}=0 or {Linux Unattended Upgrades:vfs.file.md5sum[/etc/apt/apt.conf.d/50unattended-upgrades].str(98691b672df8e877657006550c78a696)}=0 or {Linux Unattended Upgrades:vfs.file.md5sum[/etc/apt/apt.conf.d/50unattended-upgrades].str(5eba782340aba7941b801822796a0ffd)}=0</expression>
            <name>Hey! {HOST.NAME} is incorrectly setup for unattended upgrades</name>
            <url/>
            <status>1</status>
            <priority>1</priority>
            <description>If /usr/bin/unattended-upgrade binary doesn't exist then package unattended-upgrades is not installed and therefore, alert us to this fact.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Linux Unattended Upgrades:vfs.file.contents[/var/spool/cron/crontabs/root,UTF8].last(#1)}=0</expression>
            <name>Unattended Upgrades Cron Job Check</name>
            <url/>
            <status>1</status>
            <priority>1</priority>
            <description>/var/spool/cron/crontabs/root must contain the line 00 7   *   *   *    /usr/local/bin/purge-old-kernels.sh --keep 2 for this check to be OK. This will clean the kernels at 07:00 each morning.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Linux Unattended Upgrades:vfs.file.exists[/var/run/reboot-required].last(0)}=1</expression>
            <name>{HOST.NAME} has a pending reboot</name>
            <url/>
            <status>0</status>
            <priority>1</priority>
            <description>If /var/run/reboot-required exists alert that reboot needed.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
    </triggers>
</zabbix_export>

